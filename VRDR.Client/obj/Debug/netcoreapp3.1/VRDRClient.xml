<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VRDRClient</name>
    </assembly>
    <members>
        <member name="T:VRDR.Client">
            <summary>Client library for interacting with the NVSS FHIR API</summary>
        </member>
        <member name="P:VRDR.Client.Url">
            <summary>The API url</summary>
        </member>
        <member name="P:VRDR.Client.LocalTesting">
            <summary>Whether the client is running locally</summary>
        </member>
        <member name="P:VRDR.Client.Credentials">
            <summary>The credentials to access the API server</summary>
        </member>
        <member name="P:VRDR.Client.Token">
            <summary>The token to access the API server</summary>
        </member>
        <member name="F:VRDR.Client.client">
            <summary>Constructor</summary>
        </member>
        <member name="M:VRDR.Client.#ctor(System.String,System.Boolean,VRDR.Credentials)">
            <summary>Instantiate a new instance of the Client</summary>
        </member>
        <member name="M:VRDR.Client.GetMessageResponsesAsync">
            <summary>GetMessageResponsesAsync makes a GET request to the NVSS FHIR API server for any new messages
            responses</summary>
        </member>
        <member name="M:VRDR.Client.PostMessageAsync(VRDR.BaseMessage)">
            <summary>PostMessageAsync POSTS a single message to the NVSS FHIR API server for processing</summary>
        </member>
        <member name="M:VRDR.Client.CreateBulkUploadPayload(System.Collections.Generic.IEnumerable{VRDR.BaseMessage},System.String,System.Boolean)">
            <summary>Create the payload for submission to the NVSS FHIR API for bulk upload</summary>
        </member>
        <member name="M:VRDR.Client.PostMessagesAsync(System.Collections.Generic.IEnumerable{VRDR.BaseMessage},System.Int32)">
            <summary>PostMessageAsync POSTS a list of messages to the NVSS FHIR API server for processing using bulk upload</summary>
        </member>
        <member name="M:VRDR.Client.GetAuthorizeTokenAsync">
            <summary>Returns the token for the client's credientials</summary>
        </member>
        <member name="T:VRDR.Credentials">
            <summary>The Credentials class includes the values required to authenticate to the API Gateway</summary>
        </member>
        <member name="P:VRDR.Credentials.Url">
            <summary>The oauth authentication url</summary>
        </member>
        <member name="P:VRDR.Credentials.ClientId">
            <summary>The client ID provided by SAMS</summary>
        </member>
        <member name="P:VRDR.Credentials.ClientSecret">
            <summary>The client secret provided by SAMS</summary>
        </member>
        <member name="P:VRDR.Credentials.Username">
            <summary>The username provided by SAMS</summary>
        </member>
        <member name="P:VRDR.Credentials.Pass">
            <summary>The password provided by SAMS</summary>
        </member>
        <member name="M:VRDR.Credentials.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>Constructor</summary>
        </member>
    </members>
</doc>
